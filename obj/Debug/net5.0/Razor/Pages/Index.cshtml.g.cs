#pragma checksum "C:\Projects\JB\JBTimelineCharts\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e54a382673126f56f47f9f15755fed389445c319"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(JBTimelineCharts.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace JBTimelineCharts.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Projects\JB\JBTimelineCharts\Pages\_ViewImports.cshtml"
using JBTimelineCharts;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e54a382673126f56f47f9f15755fed389445c319", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8b9313b2df975c9c908b3bc994de6bb92a372043", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/JBTimelineCharts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Projects\JB\JBTimelineCharts\Pages\Index.cshtml"
  
    ViewData["Title"] = "JB Timeline Charts";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div>\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e54a382673126f56f47f9f15755fed389445c3193416", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

    <br />
    <div>
        Timeline Chart - Standard
    </div>
    <canvas id=""Timeline_Standard"" style=""border: 1px solid #DDDDDD;""></canvas>
    <br /><br />

    <div>
        Timeline Chart - Product Lifecycle
    </div>
    <canvas id=""Timeline_ProductLifecycle"" style=""border: 1px solid #DDDDDD;""></canvas>


    <script type=""text/javascript"">

        // =============================
        // Timeline - Standard
        // =============================
        var canvas_properties = {
            // Canvas type and size
            canvasType: ""Standard"", // Options: Standard, ProductLifecycle
            canvasId: ""Timeline_Standard"", // The id of the canvas to apply this property
            canvasWidth: 1200,
            canvasHeight: 650,
            canvasBackgroundColor: ""#ffffff"",

            // Timeline Bar
            timelineBarX: 50,
            timelineBarY: 600,
            timelineBarWidth: 1080,
            timeLineBarHeight: 30,
            timeL");
            WriteLiteral(@"ineBarBGColor: ""#314E59"",
            timeLineBarMonthWidth: 180, // times 6 months = 1080 pixels, which is the same as timelineBarWidth
            timeLineBarMonthFont: ""14px Segoe UI"",
            timeLineBarMonthColor: ""#FFFFFF"",
            timeLineBarMonthOffsetY: 20, // to vertically align month text on timeline bar

            // Legend section
            legendSectionX: 850,
            legendSectionY: 10,
            legendSectionWidth: 300,
            legendSectionHeight: 100,
            legendContainerBorderColor: ""#888888"",
            legendTitleText: ""Key"",
            starFillColor: ""#A0EAF2"",
            starBorderColor: ""#888888"",
            firstPartyEventFontColor: ""#314E59"",  // first party event
            thridPartyEventFontColor: ""#57A64A"",  // third party event
            releaseMilestoneFontColor: ""#0074D7"",  // release milestone

            // Data point
            maxDataPointPerMonth: 4,
            datapointTitleFont: ""bold 10px Segoe UI"",
         ");
            WriteLiteral(@"   datapointTitleColor: ""#333333"",
            datapointTitleLineHeight: 14,
            datapointDateFont: ""10px Segoe UI"",
            datapointDateColor: ""#0D0D0D"",
            datapointTextWrapLimit: ""80"", // number of pixels before the text wraps

            // Line colors and fills
            datapointLineColor: ""#437373"",
            datapointCircleBorderColor: ""#437373"",
            datapointCircleFillColor: ""#A0EAF2""
        };

        // Constants
        const months = {
            JAN: 'JANUARY',
            FEB: 'FEBRUARY',
            MAR: 'MARCH',
            APR: 'APRIL',
            MAY: 'MAY',
            JUN: 'JUNE',
            JUL: 'JULY',
            AUG: 'AUGUST',
            SEP: 'SEPTEMBER',
            OCT: 'OCTOBER',
            NOV: 'NOVEMBER',
            DEC: 'DECEMBER'
        };

        const eventtypes = {
            KEYMOMENT: 'Key Moment',
            RELEASEMILESTONE: 'Release Milestone',
            FIRSTPARTYEVENT: '1st Party Event',
");
            WriteLiteral(@"            THIRDPARTYEVENT: '3rd Party Event'
        };

        // Timeline data object - Standard
        function TimelineData_Standard(tile, month, eventdaterange, eventtype, innovations) {
            this.title = tile;
            this.month = month;
            this.eventdaterange = eventdaterange;
            this.eventtype = eventtype;
        };

        // Expectation: Months being passed should be 6 months only. This will be the actual text that is going to be displayed on the chart.
        var monthsArray = [months.MAY, months.JUN, months.JUL, months.AUG, months.SEP, months.OCT];

        // ===================
        // Expectation: Data being passed must be sorted already from oldest to newest. The month property should also be uppercase.
        var timelineDataList_Standard = [];
        timelineDataList_Standard.push(new TimelineData_Standard('Dev Summit', months.MAY, 'May 6', eventtypes.KEYMOMENT));
        timelineDataList_Standard.push(new TimelineData_Standard('Dev ");
            WriteLiteral(@"Days', months.MAY, 'May 16-17', eventtypes.FIRSTPARTYEVENT));
        timelineDataList_Standard.push(new TimelineData_Standard('Dev Focus', months.MAY, 'May 18-20', eventtypes.FIRSTPARTYEVENT));
        timelineDataList_Standard.push(new TimelineData_Standard('Dev Builds', months.MAY, 'May 19-20', eventtypes.FIRSTPARTYEVENT));
        timelineDataList_Standard.push(new TimelineData_Standard('Business Launch Event', months.JUN, 'June 3 & 10-11', eventtypes.FIRSTPARTYEVENT));
        timelineDataList_Standard.push(new TimelineData_Standard('Marketing Event', months.JUL, 'July 21-22', eventtypes.KEYMOMENT));
        timelineDataList_Standard.push(new TimelineData_Standard('Sales Event', months.JUL, 'July 22-23', eventtypes.FIRSTPARTYEVENT));
        timelineDataList_Standard.push(new TimelineData_Standard('Business Solutions Conference', months.AUG, 'Aug 6', eventtypes.FIRSTPARTYEVENT));
        timelineDataList_Standard.push(new TimelineData_Standard('Business Practices Event', months.SEP, 'Sep 22-23', e");
            WriteLiteral(@"venttypes.KEYMOMENT));
        timelineDataList_Standard.push(new TimelineData_Standard('Business Applications Launch Event', months.OCT, 'Oct 1', eventtypes.RELEASEMILESTONE));
        timelineDataList_Standard.push(new TimelineData_Standard('Direct Sales Event', months.OCT, 'Oct 7-9', eventtypes.THIRDPARTYEVENT));

        renderTimelineChart(canvas_properties, timelineDataList_Standard);




        // =============================
        // Timeline - Product Lifecycle
        // =============================
        var canvas_properties = {
            // Canvas type and size
            canvasType: ""ProductLifecycle"",  // Options: Standard, ProductLifecycle
            canvasId: ""Timeline_ProductLifecycle"", // The id of the canvas to apply this property
            canvasWidth: 1200,
            canvasHeight: 650,
            canvasBackgroundColor: ""#ffffff"",

            // Timeline Bar
            timelineBarX: 50,
            timelineBarY: 300,
            timelineBarWidth: 1");
            WriteLiteral(@"080,
            timeLineBarHeight: 10,
            timeLineBarBGColor: ""#314E59"",

            // Data point
            datapointTitleFont: ""bold 12px Segoe UI"",
            datapointTitleColor: ""#333333"",
            datapointTitleLineHeight: 14,
            datapointDateFont: ""10px Segoe UI"",
            datapointDateColor: ""#0D0D0D"",
            datapointTextWrapLimit: ""80"", // number of pixels before the text wraps

            // Line colors and fills
            datapointLineColor: ""#437373"",
            datapointCircleBorderColor: ""#437373"",
            datapointCircleFillColor: ""#A0EAF2""
        };

        // Timeline data object - Product Lifecycle
        function TimelineData_ProductLifecycle(tile, eventdaterange, innovations) {
            this.title = tile;
            this.eventdaterange = eventdaterange;
            this.innovations = innovations;
        };

        // Expectation: Data being passed must be sorted already from oldest to newest.
        var timeline");
            WriteLiteral(@"DataList_ProductLifecycle = [];
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('CPU 2019', 'mm/dd/yyyy to mm/dd/yyyy', new Array('Ryzen 3000', 'Intel 9th Gen')));
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('GPU 2019', 'mm/dd/yyyy to mm/dd/yyyy', new Array('RTX 2060', 'RTX 2070', 'RTX 2080', 'RTX 2080 TI')));
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('RAM 2019', 'mm/dd/yyyy', new Array('AData', 'Ballistix', 'Corsair', 'Crucial', 'Samsung')));
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('MoBo 2019', 'mm/dd/yyyy', new Array('ASRock', 'ASUS', 'Gigabyte', 'MSI')));
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('CPU 2020', 'mm/dd/yyyy', new Array('Ryzen 5000', 'Intel 10th Gen')));
        timelineDataList_ProductLifecycle.push(new TimelineData_ProductLifecycle('GPU 2020', 'mm/dd/yyyy', new Array('RTX 3060 TI', 'RTX 3070', 'RTX 30");
            WriteLiteral("80\', \'RTX 3090\', \'RX 6800\', \'RX 6800 XT\', \'RX 6900 XT\')));\r\n\r\n        renderTimelineChart(canvas_properties, timelineDataList_ProductLifecycle);\r\n\r\n    </script>\r\n\r\n</div>\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
